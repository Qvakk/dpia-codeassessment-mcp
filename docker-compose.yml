# Technical DPIA MCP Server - Docker Compose Configuration
# 
# Usage:
#   Local MCP (stdio):  docker-compose up -d
#   HTTP/Kubernetes:    docker-compose --profile http up -d

services:
  # Default: stdio mode for local MCP usage via docker exec
  technical-dpia-mcp:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: technical-dpia-mcp-stdio
    profiles: ["stdio", ""]  # Active by default
    restart: unless-stopped
    stdin_open: true
    tty: false
    
    # Environment variables
    environment:
      - TRANSPORT=stdio
      - CHROMA_PERSIST_DIRECTORY=/app/data/chroma_db
      - UPDATE_INTERVAL_DAYS=7
      - AUTO_UPDATE_ENABLED=true
      - DATA_SOURCES_CSV=${DATA_SOURCES_CSV:-data/legal_sources.csv}
      - PDF_CACHE_DIR=${PDF_CACHE_DIR:-data/pdf_cache}
      - CRAWL_MAX_DEPTH=${CRAWL_MAX_DEPTH:-3}
      - CRAWL_MAX_PAGES=${CRAWL_MAX_PAGES:-1000}
      - USE_EMBEDDINGS=${USE_EMBEDDINGS:-true}
      - EMBEDDING_PROVIDER=${EMBEDDING_PROVIDER:-huggingface}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL:-sentence-transformers/all-MiniLM-L6-v2}
      - EMBEDDING_DIMENSION=${EMBEDDING_DIMENSION:-384}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_EMBEDDING_MODEL=${OPENAI_EMBEDDING_MODEL:-text-embedding-3-small}
      - OPENAI_EMBEDDING_DIMENSION=${OPENAI_EMBEDDING_DIMENSION:-1536}
    
    # Mount data volume for persistence
    volumes:
      - ./data:/app/data
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    
    # Logging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # HTTP mode: For Kubernetes deployments and remote access
  technical-dpia-mcp-http:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: technical-dpia-mcp-http
    profiles: ["http"]  # Only active when explicitly requested
    restart: unless-stopped
    
    # Environment variables
    environment:
      - TRANSPORT=http
      - HTTP_PORT=3000
      - CHROMA_PERSIST_DIRECTORY=/app/data/chroma_db
      - UPDATE_INTERVAL_DAYS=7
      - AUTO_UPDATE_ENABLED=true
      - DATA_SOURCES_CSV=${DATA_SOURCES_CSV:-data/legal_sources.csv}
      - PDF_CACHE_DIR=${PDF_CACHE_DIR:-data/pdf_cache}
      - CRAWL_MAX_DEPTH=${CRAWL_MAX_DEPTH:-3}
      - CRAWL_MAX_PAGES=${CRAWL_MAX_PAGES:-1000}
      - USE_EMBEDDINGS=${USE_EMBEDDINGS:-true}
      - EMBEDDING_PROVIDER=${EMBEDDING_PROVIDER:-huggingface}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL:-sentence-transformers/all-MiniLM-L6-v2}
      - EMBEDDING_DIMENSION=${EMBEDDING_DIMENSION:-384}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_EMBEDDING_MODEL=${OPENAI_EMBEDDING_MODEL:-text-embedding-3-small}
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_OPENAI_API_VERSION=${AZURE_OPENAI_API_VERSION:-2024-02-15-preview}
      - AZURE_OPENAI_DEPLOYMENT_NAME=${AZURE_OPENAI_DEPLOYMENT_NAME}
      - CHUNK_SIZE=${CHUNK_SIZE:-1000}
      - CHUNK_OVERLAP=${CHUNK_OVERLAP:-200}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    
    # Expose HTTP port for external access
    ports:
      - "${HTTP_PORT:-3003}:3000"
    
    # Mount data volume for persistence
    volumes:
      - ./data:/app/data
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    
    # Health check for HTTP mode
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:3000/health').read()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Logging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
